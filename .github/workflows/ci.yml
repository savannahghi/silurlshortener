name: Test

on: [push]

env:
  GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}
  URL_SHORTENER_API_KEY: ${{ secrets.URL_SHORTENER_API_KEY }}
  URL_SHORTENER_DOMAIN: ${{ secrets.URL_SHORTENER_DOMAIN }}

jobs:
  lint_and_test:
    strategy:
      fail-fast: true
      matrix:
        go-version: [1.21.x]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4.1.7
      - name: Install Go
        uses: actions/setup-go@v5.0.1
        with:
          go-version: ${{ matrix.go-version }}

      - name: Run lint
        uses: golangci/golangci-lint-action@v3
        with:
            version: latest

      - name: Install Go dependencies
        run: |
          go mod download
          go get github.com/axw/gocov/gocov@latest
          go get github.com/ory/go-acc@latest
          go install github.com/ory/go-acc@latest
          go install github.com/axw/gocov/gocov@latest

      - name: Run test
        run: |
          go-acc -o coverage.txt --ignore generated,cmd  ./... -- -timeout 60m
          grep -v "generated.go" coverage.txt > coverage.out
          go tool cover -html=coverage.out -o coverage.html
          gocov convert coverage.out > coverage.json
          gocov report coverage.json > coverage_report.txt
          tail coverage_report.txt

      - name: Install goveralls
        env:
          GO111MODULE: off
        run: go get github.com/mattn/goveralls

      - name: Send coverage
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: goveralls -coverprofile=coverage.out  -service=github
